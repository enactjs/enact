// Slider.less
//
@import '../styles/mixins.less';
@import '../styles/variables.less';
@import '../styles/text.less';
@import '../styles/skin.less';

@slider-resting-state-scale: 0.8;

.slider {
	position: relative;
	margin: 0 @moon-spotlight-outset;
	height: 240px;	// Vertical sizing here. Being here instead of in .vertical requires less precedence when overriding the style from app-code.

	.fill,
	.load {
		height: 100%;
		width: 100%;
		position: absolute;
		pointer-events: none;
		transform-origin: 0 0;
		will-change: transform;
	}

	.fill {
		transition: background-color ease-out 100ms;
		will-change: background-color;
	}

	.sliderBar {
		position: relative;
		height: 100%;
		width: 100%;
		direction: ltr;	// Always arrange this according to LTR rules
	}

	.knob {
		position: absolute;
		will-change: transform;

		&::before {
			content: '';
			position: absolute;
			height: @moon-slider-knob-height;
			width: @moon-slider-knob-width;
			// Vertically and horizontally center this knob.
			// Using this method rather than -top -left so the knob is more intuitively customizable.
			-webkit-transform: @moon-translate-center scale(@slider-resting-state-scale);
			transform:         @moon-translate-center scale(@slider-resting-state-scale);
			border-radius: (@moon-slider-knob-height / 2);
			border: @moon-button-border-width solid transparent;
			box-sizing: border-box;
			will-change: transform;
			transition: transform ease-out 100ms;

			.moon-custom-text({
				height: @moon-slider-knob-height-large;
				width: @moon-slider-knob-width-large;
				border-radius: (@moon-slider-knob-height-large / 2);
			})
		}
	}

	.input {
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		margin: 0;
		background-color: transparent;
		box-sizing: border-box;
		-webkit-appearance: none;

		&::-webkit-slider-thumb {
			height: @moon-slider-knob-height;
			width: @moon-slider-knob-width;
			// -webkit-appearance:none;
			border-radius: @moon-slider-knob-width;
			box-sizing: border-box;
			visibility: hidden;

			.moon-custom-text({
				height: @moon-slider-knob-height-large;
				width: @moon-slider-knob-width-large;
				border-radius: @moon-slider-knob-width-large;
			})
		}

		:global(.enact-locale-right-to-left) & {
			direction: ltr;
		}
	}

	&.horizontal {
		@h-gap: (@moon-slider-knob-width / 2);
		padding: ((@moon-slider-knob-height - @moon-slider-bar-height) / 2) @h-gap;
		height: @moon-slider-bar-height;

		// .sliderBar {}
		.knob {
			top: 50%;
			left: 0;
		}
		.input {
			padding: 0 @h-gap;
		}

		.moon-custom-text({
			@h-gap-large: (@moon-slider-knob-width-large / 2);
			padding: ((@moon-slider-knob-height-large - @moon-slider-bar-height) / 2) @h-gap-large;

			.input {
				padding: 0 @h-gap-large;
			}
		})
	}

	&.vertical {
		@v-gap: (@moon-slider-knob-width / 2);
		padding: @v-gap ((@moon-slider-knob-height - @moon-slider-bar-height) / 2);
		width: @moon-slider-bar-height;
		min-height: 120px;
		display: inline-block;
		vertical-align: top;

		.fill,
		.load {
			bottom: 0;
			transform-origin: 0 100%; // the origin should be the bottom when vertical
		}

		.sliderBar {
			bottom: 0;
		}

		.knob {
			top: 0;
			left: 50%;
		}

		.input {
			transition: transform 1s ease;
			padding: @v-gap 0;

			// Special trickery for true vertical slider in all browsers. uses attribute `orient="vertical"` for FF.
			writing-mode: bt-lr; /* IE */
			-webkit-appearance: slider-vertical; /* WebKit */
			opacity: 0.0001;	// This needs to be still visible to remain interactive, so we can't simply set visibility:hidden or display:none or even -webkit-appearance:none. This becomes effectively invisible with 0.0001
		}

		.moon-custom-text({
			@v-gap-large: (@moon-slider-knob-width / 2);
			padding: @v-gap-large ((@moon-slider-knob-height-large - @moon-slider-bar-height) / 2);

			.input {
				padding: @v-gap-large 0;
			}
		})
	}

	.spottable({
		&.pressed,
		&:focus.activateOnFocus,
		&:focus.active {
			.knob::before {
				transform: @moon-translate-center scale(1);
			}
		}
	});

	// Skin colors
	.applySkins({
		.fill {
			background-color: @moon-progress-bar-fill-bg-color;
		}

		.load {
			background-color: @moon-progress-bar-loaded-bg-color;
		}

		.sliderBar {
			background-color: @moon-progress-bar-bg-color;
		}

		.knob::before {
			background-color: @moon-slider-knob-bg-color;
		}

		.spottable({
			&:focus.activateOnFocus,
			&.active,
			&.pressed {
				.fill {
					background-color: @moon-slider-spotlight-bar-color;
				}
			}

			&.pressed,
			&:focus {
				.knob::before {
					background-color: @moon-slider-spotlight-knob-color;
				}
			}

			&:focus {
				background-color: transparent;

				&.active {
					.knob::before {
						background-color: @moon-slider-knob-bg-color;
						border-color: @moon-slider-spotlight-knob-color;
					}
				}
			}
		});

		&.noFill {
			.fill {
				background-color: transparent;
			}

			.spottable({
				&.active,
				&.pressed {
					.fill {
						background-color: transparent;
					}
				}
			});
		}
	});
}

.muted({
	.slider {
		.spottable({
			&.pressed,
			&:focus.active {
				.knob::before {
					transform: @moon-translate-center scale(@slider-resting-state-scale);
				}
			}
		});

		// Skin colors
		.applySkins({
			.focus({
				.knob::before {
					background-color: @moon-slider-knob-bg-color;
				}
			});

			.spottable({
				&.active,
				&.pressed {
					.fill {
						background-color: @moon-progress-bar-fill-bg-color;
					}
				}

				&.pressed,
				&:focus {
					.knob::before {
						background-color: @moon-slider-knob-bg-color;
					}
				}

				&:focus {
					background-color: transparent;

					&.active {
						.knob::before {
							background-color: @moon-slider-knob-bg-color;
							border-color: @moon-slider-knob-bg-color;
						}
					}
				}
			});

		});
	}
}, parent);
