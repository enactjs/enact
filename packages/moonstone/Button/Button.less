// Button.less
//
@import '../styles/mixins.less';
@import '../styles/variables.less';
@import '../styles/text.less';
@import '../styles/skin.less';

// Local scope for some math variables
& {
	@moon-button-pressed-scaled-up: (1 + @moon-button-pressed-scale);
	@moon-button-pressed-scaled-down: (1 / @moon-button-pressed-scaled-up);

	@-webkit-keyframes expand {
		// Old Blink/Webkit doesn't support "@keyframes" so we must use both prefixed and non-prefixed in this section
		60% {
			-webkit-transform: translateZ(0) scale(@moon-button-pressed-scaled-up);
			transform: translateZ(0) scale(@moon-button-pressed-scaled-up);
		}
	}
	@-webkit-keyframes contract {
		60% {
			-webkit-transform: translateZ(0) scale(@moon-button-pressed-scaled-down);
			transform: translateZ(0) scale(@moon-button-pressed-scaled-down);
		}
	}

	@keyframes expand {
		60% { transform: translateZ(0) scale(@moon-button-pressed-scaled-up); }
	}
	@keyframes contract {
		60% { transform: translateZ(0) scale(@moon-button-pressed-scaled-down); }
	}
}

.button {.applySkins({
	.moon-large-button-text();
	position: relative;
	overflow: visible;
	height: @moon-button-height;
	line-height: (@moon-button-height - (2 * @moon-button-border-width));
	border-radius: @moon-button-border-radius;
	cursor: pointer;
	white-space: nowrap;
	display: inline-block;
	width: auto;
	min-width: @moon-button-height;
	max-width: 300px;
	padding: 0 @moon-button-h-padding;
	margin: 0 @moon-button-h-margin;
	box-sizing: border-box;
	z-index: 0;
	text-align: center;
	vertical-align: middle;
	.moon-taparea(@moon-button-height);

	.moon-custom-text({
		font-size: @moon-button-large-font-size-large;
		height: @moon-button-height-large;
		line-height: (@moon-button-height-large - (2 * @moon-button-border-width));
	});

	.bg {
		.position(0);
		position: absolute;
		content: '';
		background-color: inherit;
		z-index: -1;
		border-width: @moon-button-border-width;
		border-style: solid;
		border-radius: @moon-button-border-radius;

		transform: translateZ(0);
		will-change: transform;
		-webkit-animation-duration: 0.2s;
		-webkit-animation-iteration-count: 1;
		-webkit-animation-timing-function: ease-out;
		animation-duration: 0.2s;
		animation-iteration-count: 1;
		animation-timing-function: ease-out;
	}

	.marquee {
		flex-grow: 1;
		text-align: center;
	}

	.client {
		padding: @moon-button-border-width;	// We match the amount removed by the line-height above, so the text doesn't overlap the border
		display: flex;
		align-items: center;
		box-sizing: border-box;
		height: 100%;
		position: relative;

		// Colored under-bar
		&::before {
			content: '';
			position: absolute;
			min-width: 24px;
			height: 6px;
			bottom: 18px;
			left: 24px;
			right: 24px;
			border-radius: 6px;
		}

		.icon {
			-webkit-margin-start: 0;
		}
	}

	&.minWidth {
		min-width: @moon-button-large-min-width;
	}

	&.small {
		.moon-small-button-text();
		height: @moon-button-small-height;
		min-width: @moon-button-small-height;
		line-height: (@moon-button-small-height - (2 * @moon-button-border-width));
		padding: 0 @moon-button-small-h-padding;

		&.minWidth {
			min-width: @moon-button-small-min-width;
		}

		.moon-taparea(@moon-button-small-height);

		.moon-custom-text({
			font-size: @moon-button-small-font-size-large;
			height: @moon-button-small-height-large;
			line-height: (@moon-button-small-height-large - (2 * @moon-button-border-width));
		});

		.client::before {
			bottom: 12px;
			left: 18px;
			right: 18px;
		}
	}

	// Button-non-disabled rules
	&:not([disabled]) {
		.focus({
			&.pressed,
			&:active {
				.bg {
					-webkit-animation-name: expand;
					animation-name: expand;
				}
			}
		});
	}

	.disabled({
		cursor: default;
	});

	// Skin colors
		color: @moon-button-text-color;

		.bg {
			background-color: @moon-button-bg-color;
			border-color: transparent;
		}

		&.translucent {
			color: @moon-button-translucent-text-color;

			.bg {
				background-color: fade(@moon-button-bg-color, @moon-button-translucent-opacity);
			}
		}

		&.transparent {
			color: @moon-text-color;

			.bg {
				background-color: transparent;
			}
		}

		&.red .client::before {
			background-color: @moon-remote-button-red-color;
		}
		&.green .client::before {
			background-color: @moon-remote-button-green-color;
		}
		&.yellow .client::before {
			background-color: @moon-remote-button-yellow-color;
		}
		&.blue .client::before {
			background-color: @moon-remote-button-blue-color;
		}

		&:not([disabled]) {
			.focus({
				color: @moon-spotlight-text-color;
				background-color: transparent;

				.bg {
					background-color: @moon-spotlight-border-color;
				}
			});
		}

		// 'Selected' state
		&.selected {
			.bg {
				border-color: @moon-spotlight-border-color;
			}

			// 'Selected+Focus' state, seen in grouped buttons
			.focus({
				color: @moon-spotlight-text-color;

				.bg {
					border-color: @moon-active-spotlight-border-color;
					background-color: @moon-spotlight-border-color;
				}
			});
		}

		.disabled({
			&.translucent,
			&.transparent {
				opacity: @moon-disabled-translucent-opacity;
			}
		});
	});
}

.muted({
	.button {
		// Button-non-disabled rules
		&:not([disabled]) {
			.focus({
				&.pressed,
				&:active {
					.bg {
						-webkit-animation-name: none;
						animation-name: none;
					}
				}
			});
		}

		// Skin colors
		.applySkins({
			.focus({
				background-color: transparent;
				color: @moon-button-text-color;

				.bg {
					background-color: @moon-button-bg-color;
				}

				&.translucent {
					color: @moon-button-translucent-text-color;

					.bg {
						background-color: fade(@moon-button-bg-color, @moon-button-translucent-opacity);
					}
				}

				&.transparent {
					color: @moon-text-color;

					.bg {
						background-color: transparent;
					}
				}
			});

			&.selected {
				// 'Selected+Focus' state, seen in grouped buttons
				.focus({
					.bg {
						border-color: @moon-spotlight-border-color;
					}
				});
			}
		});
	}
});


:global(.aqua).button {
	position: relative;
	display: inline-block;
	color: black;
	padding: 0 2ex;
	line-height: 36px;
	font-size: 21px;
	border: 0 transparent none;
	margin: 3px 12px 15px;
	transition: transform 50ms ease-out;
	vertical-align: bottom;
	text-align: center;

	.bg {
		.position(0);
		position: absolute;
		border-radius: 999px;
		// background-image: radial-gradient(60% 120%, rgba(78, 115, 167, 0) 0%, rgba(81, 104, 148, 0) 70%, #949494 100%), linear-gradient(to bottom, rgba(204, 204, 204, 0.37) 2%, #dedede 4%, rgba(183, 183, 183, 0.6) 26%, rgba(169, 169, 169, 0.4)  28%, #cccccc 40%, #d8d8d8 53%, #fbfbfb 87%, #e6e6e6 100%);
		background-image: radial-gradient(60% 120%, rgba(78, 115, 167, 0) 0%, rgba(81, 104, 148, 0) 70%, #949494 100%), linear-gradient(to bottom, rgba(204, 204, 204, 0.5) 2%, #dedede 4%, rgb(191, 191, 191) 26%, rgb(195, 195, 195) 28%, #cccccc 40%, #d8d8d8 53%, #fbfbfb 87%, #e6e6e6 100%);
		box-shadow: 0 2px 3px rgba(0, 0, 0, 0.1), 0 6px 6px rgba(220, 220, 220, 0.25), 0 3px 10px rgba(0, 0, 0, 0.25);
	}

	&:not([disabled]) {
		&:focus {
			background-color: transparent;

			.bg {
				background-color: white;
				background-image: radial-gradient(60% 120%, rgba(78, 115, 167, 0) 0%, rgba(81, 104, 148, 0) 70%, #535d80 100%), linear-gradient(to bottom, rgba(114, 134, 202, 0.58) 2%, #bfcfde 4%, rgb(118, 148, 182) 26%, rgba(93, 128, 168, 0.85) 28%, #7a9cce 40%, #86abd7 53%, #b5e5fb 87%, #87b2e5 100%);
				box-shadow: 0 2px 3px rgba(0, 0, 0, 0.1), 0 6px 6px rgba(85, 198, 214, 0.25), 0 6px 10px rgba(0, 0, 0, 0.25);
			}
			.client {
				color: inherit;
			}
		}
		&.pressed,
		&:global(.spottable):active {
			.bg {
				@darkenBy: 10%;
				background-image: radial-gradient(60% 120%, rgba(78, 115, 167, 0) 0%, rgba(81, 104, 148, 0) 70%, #535d80 100%), linear-gradient(to bottom, darken(rgba(114, 134, 202, 0.37), @darkenBy) 2%, darken(#bfcfde, @darkenBy) 4%, darken(#7694b6, @darkenBy) 26%, darken(#5d80a8, @darkenBy) 28%, darken(#7a9cce, @darkenBy) 40%, darken(#86abd7, @darkenBy) 53%, darken(#b5e5fb, @darkenBy) 87%, darken(#87b2e5, @darkenBy) 100%);
				transform: translateY(3%);
			}
		}
	}
}

:global(.car).button {
	display: inline-block;
	border-radius: 9px;
	padding: 3px;
	color: #a9cbf0;
	margin: 6px 3px;
	border: 0 transparent none;
	background: #4c6c8c linear-gradient(to bottom, rgba(0,0,0, 0) 2%, rgba(0,0,0, 0.8) 100%);
	transition: transform 100ms ease-out;
	vertical-align: middle;
	text-align: center;

	.client {
		display: block;
		padding: 0 1ex;
		line-height: 60px;
		font-size: 30px;
		border-radius: 6px;
		background-color: #213469;
		background-image: linear-gradient(to bottom, rgba(0,0,0, 0) 2%, rgba(0,0,0, 0.5) 100%);
		transition: color 100ms ease-out;
	}

	&:not([disabled]) {
		&:focus {
			.client {
				background-color: lighten(#213469, 10%);
				color: white;
			}
		}
		&.pressed,
		&:global(.spottable):active {
			transform: scale(0.98);

			.client {
				background-color: lighten(#213469, 10%);
			}
		}
	}
}

:global(.material).button {
	display: inline-block;
	padding: 0 2ex;
	line-height: 48px;
	font-size: 30px;
	border-radius: 6px;
	border: 0 transparent none;
	margin: 6px 12px;
	background-color: transparent;
	transition: background-color 500ms ease-in-out;
	vertical-align: bottom;
	text-align: left;

	&:not([disabled]) {
		&:focus {
			background-color: rgba(0, 0, 0, 0.1);
		}
		&.pressed,
		&:global(.spottable):active {
			transition-duration: 200ms;
			background-color: rgba(0, 0, 0, 0.2);
		}
	}
}
