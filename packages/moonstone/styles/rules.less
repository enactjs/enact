// Common Moonstone Rules
//
@import '~@enact/ui/styles/mixins.less';
@import './mixins.less';
@import './fonts.less';
@import './skin.less';

/* Prevent browser's default focus treatment (at least in Chrome) */
:focus {
	outline: none;
}

.applySkins({
	color: @moon-text-color;

	::selection {
		color: @moon-spotlight-text-color;
		background-color: lighten(@moon-spotlight-bg-color, 18%);
	}

	// Spotlight
	// This rule-set applies a generic spottable set of colors to anything with the spottable class
	// that is a child of a skin. It's a blanket rule for components that don't technically need to
	// be skinnable themselves, but still need to be focusable and inherit rules from their parent.
	// The rule below this, should look identical, with the exception of the absence of the `parent`
	// argument to the focus mixin. This allows that set of rules to prevail over this generic set.
	//// Inherited Spottable rules (for components that aren't directly skinned)
	.focus({
		background-color: @moon-spotlight-bg-color;
		color: @moon-spotlight-text-color;
	}, parent);
	//// Primary spottable rules (for any component with a skin applied to itself)
	.focus({
		background-color: @moon-spotlight-bg-color;
		color: @moon-spotlight-text-color;
	});

	// Spotlight Muted Components
	.muted({
		.focus({
			background-color: transparent;
			color: @moon-text-color;
		}, parent);
	}, parent);

	// Disabled Components
	.disabled({
		.vendor-opacity(@moon-disabled-opacity);

	cursor: default;

		// Disabled children of disabled components
		.disabled({
			.vendor-opacity(1);
		}, parent);
	});
});





:global(.aqua) {
	font-family: 'Helvetica', sans-serif;

	&:global(.theme),
	&.bg,
	& .bg {
		background: #004080 url("http://lorempixel.com/720/480/abstract/2/") no-repeat center/cover;
	}

	:global(.spottable):focus {
		background-color: #a3cdfe;
	}

	h3 {
		color: black;
		border-bottom: 3px solid rgba(0, 0, 0, 0.25);
		padding: 0 12px;
		font-size: 24px;
	}
}

:global(.car) {
	font-family: 'Futura', sans-serif;
	color: white;
	-webkit-font-smoothing: antialiased;

	&:global(.theme),
	&.bg,
	& > .bg {
		background-color: #222;
	}

	h3 {
		text-align: center;
		position: relative;

		&::after {
			content: '';
			display: block;
			position: absolute;
			left: 0;
			right: 0;
			top: 100%;
			height: 3px;
			background: linear-gradient(to right, rgba(200,0,0,0) 0%, rgba(200,0,0,1) 50%, rgba(200,0,0,0) 100%);
		}
	}
}

:global(.material) {
	font-family: 'Roboto', sans-serif;
	-webkit-font-smoothing: antialiased;

	&:global(.theme),
	&.bg,
	& > .bg {
		background-color: white;
	}

	h3 {
		box-sizing: border-box;
		-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
		background-color: rgb(232, 232, 232);
		height: 56px;
		padding: 0px 24px;
		padding-right: 16px;
		line-height: 56px;
		font-size: 20px;
		color: rgba(0, 0, 0, 0.4);
	}

	p {
		margin-left: 1ex;
		margin-right: 1ex;
	}
}
