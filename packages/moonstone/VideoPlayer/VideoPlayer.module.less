// VideoPlayer.module.less
//
@import "../styles/variables.less";
@import "../styles/mixins.less";
@import "../styles/skin.less";

.videoPlayer {
	// Set by counting the IconButtons inside the side components.
	--moon-video-player-max-side-components: 0;

	overflow: hidden;

	.video {
		height: 100%;
		width: 100%;
	}

	.preloadVideo {
		display: none;
	}

	.overlay {
		position: absolute;
		.position(0);

		&::after {
			content: "";
			position: absolute;
			.position(auto, 0, 0, 0);
			height: 360px;
			transform-origin: bottom;
			// Fancier gradient for future reference. Keeping linear-gradient as specified from Enyo.
			// background-image: radial-gradient(rgba(0, 0, 0, 0) 50%, #000000 100%);
			// background-size: 170% 200%;
			// background-position: bottom center;
		}
	}

	.fullscreen {
		.miniFeedback {
			position: absolute;
			z-index: 50;  // Value assigned as part of the VideoPlayer API so layers may be inserted in-between
			top: @moon-video-feedback-mini-position-top;
			left: @moon-video-feedback-mini-position-left;
			font-family: @moon-video-feedback-mini-font-family;
			font-weight: @moon-video-feedback-mini-font-weight;
			font-style: @moon-video-feedback-mini-font-style;
			font-size: @moon-video-feedback-mini-font-size;
			padding: 0 @moon-video-feedback-mini-padding-side;
			line-height: @moon-video-feedback-mini-line-height;
			border-radius: (@moon-video-feedback-mini-line-height / 2);
			bottom: auto;
			pointer-events: none;
		}

		.bottom {
			position: absolute;
			z-index: 100;  // Value assigned as part of the VideoPlayer API so layers may be inserted in-between
			bottom: @moon-video-player-padding-bottom;
			left: @moon-video-player-padding-side;
			right: @moon-video-player-padding-side;

			&.hidden {
				pointer-events: none;

				.sliderFrame {
					position: absolute;
					width: 100%;
				}
			}

			.infoFrame {
				display: flex;
				margin-bottom: @moon-spotlight-outset;

				// Title Container
				.titleFrame {
					--infoComponentsOffset: 0;

					@badges-present-transition: transform 500ms ease-in-out;

					position: relative;
					flex-grow: 1;
					opacity: 1;
					.margin-start-end(0, @moon-spotlight-outset);

					&.hidden {
						transition: opacity 1000ms ease-in-out;
						opacity: 0;
					}

					// Title
					.title {
						position: absolute;
						bottom: -5px;
						width: 100%;
						.moon-text-base(@moon-video-player-title-size);
						line-height: @moon-header-line-height;
						transition: @badges-present-transition;
						.font-kerning;

						&.infoVisible {
							transform: translateY(~"calc(var(--infoComponentsOffset) * -1)") translateZ(0);
						}

						.moon-locale-non-latin({line-height: @moon-non-latin-header-line-height;});
					}

					// Badges and title components
					.infoComponents {
						vertical-align: super;

						&.hidden {
							opacity: 0;
						}
						&.visible {
							transition: opacity 500ms ease-in-out;
						}

						> * {
							display: inline-block;
							margin: 0 6px;
						}

						.badgeTextIcon {
							font-family: @moon-font-family-bold;
							font-size: @moon-video-player-badge-text-size;
							text-align: center;
							white-space: nowrap;
							display: inline-block;
						}

						.fontLgIcons {
							font-family: "LG Icons";
						}
					}
				}

				.times {
					.moon-text-base(@moon-video-player-indicator-text-size);
					align-self: flex-end;
					white-space: nowrap;

					> * {
						display: inline-block;
					}

					.separator {
						padding: 0 1ex;
					}

					:global(.enact-locale-right-to-left) & {
						direction: ltr;
					}
				}
			}

			.sliderFrame {
				@slider-padding-v: ((@moon-video-player-slider-tap-area - @moon-video-player-slider-height) / 2);
				@slider-padding-h: @moon-video-player-slider-knob-size;

				&.hidden {
					will-change: opacity;
					opacity: 0;
				}

				.mediaSlider {
					margin: 0;
					padding: @slider-padding-v 0;
					height: @moon-video-player-slider-height;

					// Add a tap area that extends to the edges of the screen, to make the slider more accessible
					&::before {
						content: "";
						position: absolute;
						.position(0, -(@moon-video-player-padding-side));
					}

					// Grow the knob when the Slider gets spotted
					.focus({
						.knob::before {
							transform: @moon-translate-center scale(0.5);
							opacity: 1;
						}
					});

					.spottable({
						&.pressed {
							.knob::before {
								transform: @moon-translate-center scale(0.75);
								opacity: 1;
							}
						}
					});
				}

				.fill,
				.load {
					border-top-right-radius: (@moon-video-player-slider-height / 2);
					border-bottom-right-radius: (@moon-video-player-slider-height / 2);
				}

				// Knob
				.knob {
					@activate-transition-function: cubic-bezier(0.15, 0.85, 0.6, 1.65);
					//@slide-transition-function:    cubic-bezier(0.15, 0.85, 0.53, 1.09);

					//-webkit-transition: -webkit-transform @slide-transition-function 0.2s;
					//transition:                 transform @slide-transition-function 0.2s;

					&::before {
						width: (@moon-video-player-slider-knob-size * 2);
						height: (@moon-video-player-slider-knob-size * 2);
						border-width: 0;
						border-radius: @moon-video-player-slider-knob-size;
						-webkit-transform: @moon-translate-center scale(0.5);
						transform:         @moon-translate-center scale(0.5);
						opacity: 0;
						will-change: transform, opacity;
						-webkit-transition: -webkit-transform @activate-transition-function 0.2s, opacity ease 0.2s;
						transition:                 transform @activate-transition-function 0.2s, opacity ease 0.2s;
					}
				}

				&.scrubbing {
					.knob {
						display: block;
					}
				}

				// Status Indicator
				.status-indicator {
					.moon-slider-popup-center {
						font-family: @moon-font-family;
						font-size: @moon-video-player-indicator-text-size;
						line-height: 36px;
						position: absolute;	// Allows flip-h to work
						margin: 0 30px;
					}
				}
			}

			.controlsFrame {
				@expanding-button-clearance: 3px;

				position: relative;
				display: flex;

				&.hidden {
					will-change: opacity;
					opacity: 0;
				}

				.leftComponents,
				.rightComponents {
					flex: 0 1;
					// Take the size of buttons, add margins for each button, multiply that by the amount of buttons, then remove the margins for the first and last button
					// Due to a LESS parsing issue, this 'calc' must be applied to a full-property, not a short-hand property
					flex-basis: ~"calc((" @moon-icon-button-size + (@moon-spotlight-outset * 2) ~" * var(--moon-video-player-max-side-components)) - " (@moon-spotlight-outset * 2) ~")";
					white-space: nowrap;
					padding: @expanding-button-clearance 0;
				}
				.leftComponents {
					text-align: start;

					> :first-child {
						.margin-start-end(0, @moon-button-h-margin);
					}
				}
				.rightComponents {
					text-align: end;

					> :last-child {
						.margin-start-end(@moon-button-h-margin, 0);
					}
				}
				.centerComponentsContainer {
					flex: 3 1;
					width: 0; // the width will be automatically pushed wider by flex. width:auto breaks this.
					// Must get clever with the masking. This container must support horizontal
					// clipping without inhibiting the ability for components to overflow out of
					// their natural containers. overflow-x:hidden;overflow-y:visible; adds a clip
					// region and a scrollbar which conflicts with buttons' ability to grow large
					// when clicked. Basic overflow:hidden cannot be used either, as it clips too.
					-webkit-mask-image: -webkit-gradient(linear, left top, right top, color-stop(0.9,  rgba(0,0,0,1)), color-stop(1,  rgba(0,0,0,0)));
					padding: @expanding-button-clearance 0;

					.centerComponents {
						transition: 500ms transform ease;
						will-change: transform;
						white-space: nowrap;

						&.more {
							transform: translateX(-100%);
							text-align: center;
							pointer-events: none;

							.moreControls {
								pointer-events: auto;
							}
						}
						.mediaControls,
						.moreControls {
							width: 100%;
							display: inline-block;

							> * {
								vertical-align: top;
							}
						}
						.mediaControls {
							text-align: center;
							direction: ltr;
						}
						.moreControls {
							pointer-events: none;
						}
					}

					:global(.enact-locale-right-to-left) & {
						-webkit-mask-image: -webkit-gradient(linear, right top, left top, color-stop(0.9,  rgba(0,0,0,1)), color-stop(1,  rgba(0,0,0,0)));

						.centerComponents.more {
							transform: translateX(100%);
						}
					}
				}
			}
		}
	}

	.controlsHandleAbove {
		pointer-events: none;
		position: absolute;
		.position(0, 0, auto, 0);
	}

	// Skin colors
	.applySkins({
		.fullscreen {
			.miniFeedback {
				background-color: @moon-video-feedback-mini-bg-color;
				color: @moon-video-feedback-mini-text-color;
			}
			.bottom {
				background-color: @moon-video-player-bottom-bg-color;

				.infoFrame {
					text-shadow: @moon-video-player-title-text-shadow;

					// Title Container
					.titleFrame {
						color: @moon-video-player-title-color;

						.redIcon {
							background-color: @moon-video-player-redicon-bg-color;
							color: @moon-video-player-redicon-text-color;
						}
					}
					.times {
						.moon-text-base(@moon-video-player-indicator-text-size);
						align-self: flex-end;
						white-space: nowrap;
						color: @moon-video-player-subdued-text-color;

						> * {
							display: inline-block;
						}

						.separator {
							padding: 0 1ex;
						}

						.currentTime {
							color: @moon-video-player-indicator-text-color;
						}
					}
				}

				.sliderFrame {
					.slider {
						.bars {
							background-color: @moon-video-player-slider-bg-color;
						}

						.load {
							background-color: @moon-video-player-slider-load-color;
						}

						.fill {
							background-color: @moon-video-player-slider-fill-color;
						}

						// Knob
						.knob {
							&::before {
								background-color: @moon-video-player-slider-knob-color;
							}
						}
					}

					// Status Indicator
					.status-indicator {
						.moon-slider-popup-center {
							color: @moon-video-player-indicator-text-color;
							text-shadow: @moon-video-player-title-text-shadow;

							.moon-icon {
								color: inherit;
							}
						}
					}
				}
			}
		}

		.overlay {
			&.high-contrast-scrim::after {
				background: @moon-video-player-high-contrast-scrim-gradient-color
			}
		}
	});
}
