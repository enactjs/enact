// FormCheckboxItem.module.less
//
@import "../styles/mixins.less";
@import "../styles/skin.less";

// Public
.formCheckboxItem {
	/* Available for customization */

	// FormCheckboxItem should not increase in size when in `largeText` mode
	.moon-custom-text({
		font-size: @moon-item-font-size;
		line-height: @moon-item-line-height;

		.moon-locale-non-latin({
			line-height: @moon-item-line-height;
		});
	});
}

// Interally theme our implementation using published classes from ToggleItem and ToggleIcon
.toggleItem {
	.content {
		overflow: hidden;
	}

	// Skin colors
	.applySkins({
		// The following code targets all elements that don't act as an invisible frame, and sets
		// them to the disabled opacity. Invisible frames however are set to fully opaque so their
		// children can be affected. Below toggleIcon is specifically targeted so it remains full
		// opacity when focused and disabled, overriding these more general rules.
		.disabled({
			opacity: 1;

			> * {
			    opacity: @moon-disabled-opacity;
			}
			.slot {
			    opacity: 1;

				> * {
				    opacity: @moon-disabled-opacity;
				}
			}
		});

		.focus({
			color: @moon-formcheckboxitem-focus-text-color;
			background-color: @moon-formcheckboxitem-focus-bg-color;

			.disabled({
				.slot {
					.toggleIcon {
					    opacity: 1;
					}
				}
			});
		});
	});
}
