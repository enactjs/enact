@import '../styles/variables.less';

.scrollbar {
	background: inherit;
	display: flex;
	border-color: transparent;
	visibility: visible;
	opacity: 1;
	flex: none;

	transform: translateZ(0);
	-webkit-transform: translateZ(0);
	transition: opacity 0.1s linear;
	-moz-transition: opacity 0.1s linear;
	-webkit-transition: opacity 0.1s linear;

	&.vertical {
		flex-direction: column;
	}

	&.horizontal {
		:global(.enact-locale-right-to-left) & {
			// Flip the entire bar horizontally in RTL mode, and force it to remain in LTR.
			direction: ltr;
			transform: scaleX(-1);
		}
	}

	&.corner {
		-webkit-padding-end: @moon-icon-button-small-size;

		:global(.enact-text-large) & {
			-webkit-padding-end: @moon-icon-button-small-size-large;
		}
	}

	&.native {
		position: fixed;
		height: 100%;
		box-sizing: border-box;
		right: 0;
		pointer-events: none;

		:global(.enact-locale-right-to-left) & {
			left: 0;
			right: auto;
		}

		&.both {
			padding-bottom:  @moon-icon-button-small-size;

			:global(.enact-text-large) & {
				padding-bottom: @moon-icon-button-small-size-large;
			}
		}
	}

	/* ScrollButton */
	.scrollbarButtonNoCompositeLayer {
		&,
		&:before,
		&:after,
		div,
		span {
			will-change: auto;
		}

		&:before {
			content: none;
		}

		div,
		span {
			-webkit-transform: initial;
			transform: initial;
		}
	}

	.scrollButton {
		.scrollbarButtonNoCompositeLayer;
		background-color: transparent;
		margin: 0;
		pointer-events: auto;
	}

	/* ScrollThumb */
	.thumbShown {
		opacity: 1;
	}
}
