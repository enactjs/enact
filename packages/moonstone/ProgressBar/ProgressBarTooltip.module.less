// ProgressBarTooltip.module.less
//
@import '../styles/variables.less';
@import '../styles/mixins.less';

.tooltip {
	--tooltip-progress-proportion: 0;
	--tooltip-progress-percent: ~"calc(var(--tooltip-progress-proportion) * 100%)";
	--tooltip-calculated-offset: ~"var(--moon-tooltip-offset, 0px)";

	@offset-large: 0;

	.before (@ruleset) {
		&.left,
		&.before,
		:global(.enact-locale-right-to-left) &.after {
			@ruleset();
		}
	}

	.after (@ruleset) {
		&.right,
		&.after,
		:global(.enact-locale-right-to-left) &.before {
			@ruleset();
		}
	}

	&.horizontal {
		left: var(--tooltip-progress-percent);

		&.above {
			top: 0;

			.before({
				transform: translateY(~"calc(-100% - var(--tooltip-calculated-offset))");
			});

			.after({
				transform: translateX(-100%) translateY(~"calc(-100% - var(--tooltip-calculated-offset))");
			});

			.moon-custom-text({
				bottom: ~"calc(var(--tooltip-calculated-offset) + " @offset-large ~")";
			});
		}

		&.below {
			bottom: 0;

			.before({
				transform: translateY(~"calc(100% + var(--tooltip-calculated-offset))");
			});

			.after({
				transform: translateX(-100%) translateY(~"calc(100% + var(--tooltip-calculated-offset))");
			});

			.moon-custom-text({
				top: ~"calc(var(--tooltip-calculated-offset) + " @offset-large ~")";
			});
		}
	}

	&.vertical {
		bottom: var(--tooltip-progress-percent);

		// Left side
		.before({
			right: 0;
			transform: translate(~"calc(var(--tooltip-calculated-offset) * -1)", 50%);

			.moon-custom-text({
				transform: translate(~"calc(var(--tooltip-calculated-offset) * -1 - " @offset-large ~")", 50%);
			});
		});

		// Right side
		.after({
			right: auto;
			transform: translate(var(--tooltip-calculated-offset), 50%);

			.moon-custom-text({
				transform: translate(~"calc(var(--tooltip-calculated-offset) + " @offset-large ~")", 50%);
			});
		});
	}
}
