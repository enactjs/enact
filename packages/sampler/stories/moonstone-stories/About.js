import kind from '@enact/core/kind';
import BodyText from '@enact/moonstone/BodyText';
import Button from '@enact/moonstone/Button';
import Icon from '@enact/moonstone/Icon';
import React from 'react';
import PropTypes from 'prop-types';
import ri from '@enact/ui/resolution';
import {storiesOf, action} from '@kadira/storybook';
import {boolean} from '@kadira/storybook-addon-knobs';
import css from './About.less';

const riSafe = (style) => {
	switch (typeof style) {
		case 'object':
			for (let rule in style) {
				if (typeof style[rule] === 'number') {
					style[rule] = ri.unit(ri.scale(style[rule]), 'rem');
				}
			}
			return style;
		default:
			return ri.unit(ri.scale(style), 'rem');
	}
};

const Pointer = kind({
	name: 'Pointer',

	propTypes: {
		pointDirection: PropTypes.string.isRequired,
		length: PropTypes.number
	},

	computed: {
		direction: ({pointDirection, length = 201}) => {
			switch (pointDirection) {
				case 'topLeft':
					return riSafe({
						width: length,
						height: 12,
						cx: 6,
						cy: 6,
						x1: 6,
						y1: 6,
						x2: length,
						y2: 6
					});
				case 'bottomLeft':
					return riSafe({
						width: 12,
						height: length,
						cx: 6,
						cy: (length - 6),
						x1: 6,
						y1: 0,
						x2: 6,
						y2: (length - 6)
					});
				case 'topRight':
					return riSafe({
						width: 12,
						height: length,
						cx: 6,
						cy: 6,
						x1: 6,
						y1: 6,
						x2: 6,
						y2: length
					});
			}
		}
	},

	render: ({direction, style}) => (
		<svg width={direction.width} height={direction.height} style={style}>
			<circle cx={direction.cx} cy={direction.cy} r={riSafe(6)} />
			<line x1={direction.x1} y1={direction.y1} x2={direction.x2} y2={direction.y2} />
		</svg>
	)
});

storiesOf('About Sampler')
	.addWithInfo(
		' ',
		'A Tour of Sampler',
		() => (
			<div>
				<BodyText
					centered={boolean('text centered', false)}
				>
					Welcome to the Enact sampler! Explore Enact components.
				</BodyText>
				<Button onClick={action('onClick')} selected={boolean('button selected', false)}>
					Click me
				</Button>
				<div className={css.hintDialog} style={{top: riSafe(48), right: 9}}>
					<Pointer pointDirection="topRight" length={21} style={riSafe({top: -21, right: 0})} />
					<div className={css.text}>
						Click <b>?</b> to see the live source code for the sample
					</div>
				</div>
				<div className={css.hintDialog} style={riSafe({position: 'relative', top: 60, left: 30})}>
					<Pointer pointDirection="topLeft" length={30 + 6} style={{left: riSafe(-30 - 6)}} />
					<div className={css.text}>
						Select any component from the <b>sidebar</b> to see how it works
					</div>
				</div>
				<div className={css.hintDialog} style={{bottom: riSafe(198), left: 54}}>
					<Pointer pointDirection="bottomLeft" length={198 - 6} style={riSafe({left: 6, bottom: (-198 + 6)})} />
					<div className={css.text}>
						<b>ACTION LOGGER</b> Logs events generated by components <b>
							<Icon small className={css.icon}>arrowsmallup</Icon>
							Click the button above
						</b>
					</div>
				</div>
				<div className={css.hintDialog} style={{bottom: riSafe(120), left: 192}}>
					<Pointer pointDirection="bottomLeft" length={120 - 6} style={riSafe({left: 6, bottom: (-120 + 6)})} />
					<div className={css.text}>
						<b>BACKGROUNDS</b> Change background for visual reference
					</div>
				</div>
				<div className={css.hintDialog} style={{bottom: riSafe(42), left: 282}}>
					<Pointer pointDirection="bottomLeft" length={42 - 6} style={riSafe({left: 6, bottom: (-42 + 6)})} />
					<div className={css.text}>
						<b>KNOBS</b> Adjust component properties
					</div>
				</div>
			</div>
		)
	);
