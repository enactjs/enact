import BodyText from '@enact/moonstone/BodyText';
import Button from '@enact/moonstone/Button';
import React from 'react';
import {storiesOf, action} from '@kadira/storybook';
import {withKnobs, boolean} from '@kadira/storybook-addon-knobs';

// TODO: Convert to kind
class Arrow extends React.Component {
	static propTypes = {
		start: React.PropTypes.object.isRequired,
		stop: React.PropTypes.object.isRequired
	}

	render () {
		let style = {
			position: 'absolute'
		};

		let pathD = 'M' + this.props.start.x + ',' + this.props.start.y + ' ';
		pathD += 'L' + this.props.stop.x + ',' + this.props.stop.y;

		let width = Math.max(this.props.start.x, this.props.stop.x) + 25;
		let height = Math.max(this.props.start.y, this.props.stop.y) + 25;

		return (
			<svg width={width} height={height} style={style} >
				<defs>
					<marker markerWidth="13" markerHeight="13" refX="2" refY="6" orient="auto" id="arrow">
						<path d="M2,1 L2,10 L10,6 L2,2" style={{fill:'red'}} />
					</marker>
				</defs>

				<path
					d={pathD}
					style={{stroke:'red', strokeWidth: '3px', fill: 'none', markerEnd: 'url(#arrow)'}}
				/>
			</svg>);
	}
}

storiesOf('About Sampler')
	.addDecorator(withKnobs)
	.addWithInfo(
		' ',
		'A Tour of Sampler',
		() => (
			<div>
				<div style={{position: 'fixed', right: 145, top: 17}}>
					<span style={{lineHeight: '55px'}}>Click the ? to see the source for a sample</span>
					<Arrow start={{x:5, y:30}} stop={{x:80, y:10}} />
				</div>
				<div style={{position: 'fixed', left: 25, bottom: 190}}>
					<Arrow start={{x:15, y:40}} stop={{x:15, y:190}} />
					The Action Logger shows events generated by components. Try clicking on the button.
				</div>
				<div style={{position: 'fixed', left: 155, bottom: 140}}>
					<Arrow start={{x:15, y:40}} stop={{x:15, y:140}} />
					The Backgrounds tab allows you to see what components look like on different backgrounds.
				</div>
				<div style={{position: 'fixed', left: 275, bottom: 90}}>
					<Arrow start={{x:15, y:40}} stop={{x:15, y:90}} />
					The Knobs tab allows you to adjust component properties
				</div>
				<BodyText
					centered={boolean('centered', false)}
				>
					Welcome to the Enact sampler!
				</BodyText>
			<Button onClick={action('onClick')}>
				Click me
			</Button>
			</div>
		)
	);

