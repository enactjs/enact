// Marquee.module.less
//

.marquee {
	// NOTE: Keeping this around for now to validate if we want to use box layout instead of white-space
	// This obscure set of code implements single-line ellipsis-clipped text that doesn't interfere with layout.
	// white-space: nowrap; interferes with may pure-css layouts.
	// overflow: hidden;
	// display: -webkit-box;
	// -webkit-box-orient: block-axis;
	// -webkit-line-clamp: 1;


	// DEV NOTE: The following should move into the styles/ directory when this is ready for review/integration
	@ui-marquee-fade-width: 48px;  // Width of the fade gradient

	width: auto;
	white-space: pre !important;
	overflow: hidden;
	text-align: left;

	&.fade {
		// fade left side only
		-webkit-mask-box-image: linear-gradient(to right, transparent, black @ui-marquee-fade-width, black calc(100% - @ui-marquee-fade-width), transparent);
	    transition: -webkit-mask-box-image-outset 250ms ease;
	    -webkit-mask-box-image-outset: 0 @ui-marquee-fade-width 0 (@ui-marquee-fade-width * 2);
		-webkit-mask-box-image-width: 0 @ui-marquee-fade-width 0 @ui-marquee-fade-width;

		&.rtl {
			// fade right side only
			-webkit-mask-box-image-outset: 0 (@ui-marquee-fade-width * 2) 0 @ui-marquee-fade-width;
		}

		// using willAnimate allows the fade to remain during the reset pause since the GPU layer isn't
		// removed until marquee is cancelled
		&.animate {
			// fade both sides
			-webkit-mask-box-image-outset: 0 @ui-marquee-fade-width 0 @ui-marquee-fade-width;
		}
	}

	.text {
		--ui-marquee-padding: 0;

		pointer-events: none;
		text-overflow: clip;
		overflow: hidden;
		width: 100%;
		white-space: pre !important;
		transition-property: left, right;
		transition-timing-function: linear;
		position: relative;

		.padding {
			display: inline-block;
			width: calc(1px * var(--ui-marquee-padding, 0));
		}
	}

	&.willAnimate .text {
		will-change: left, right;
	}

	&.animate .text {
		overflow: visible;
	}

	:global(.enact-locale-right-to-left) & {
		text-align: right;
	}
}
